user_id,recommendation,app_id,review_id,date,type,username,review_text
76561198030905002,Recommended,576030,29370693,Posted: 19 January,all,tranvandon,"As a senior citizen, I was amazed to find out how to build a CPU based on a simple NAND gate through the process of breaking up a problem into modules and combining them in creative. This would have taken a university course and I would have been bored out of my mind.Instead, I was enthralled as I went the guided series of puzzles to solve more complicated ones using previously.I especially like the latest update (2017-01-18) which allowed the revision of previous designs when I thought of better ways to solve problems.Be aware that this is a text-based game. I prefer this as I do not have to struggle with a mouse.Especially for senior citizens, the good points are:Clear readable fontsEngages my mind rather my reflexesAuto-saving of current sessionsConsistent rules for solving puzzlesComprehensive test engine to identify scenarios under which the design failsThis puzzle game has the following constraints:Limited space for circuit specificationStrict syntax for circuit specficationPuzzles have to solved in orderOverall, I liked the game."
,Recommended,576030,32728445,Posted: 24 June,all,markus,"The game is based on the ""HACK"" computer developed in the course ""From NAND to TETRIS"" and in the book ""The Elements of Computing Systems"", both developed by Noam Nisan and Shimon Schocken. While Nisan and Schocken allow free use of their teaching materials, I believe the game should give credit to the creators. The course actually comes with exercises (complete with hardware simulator) which lets you do pretty much exactly what this game does, and more: It completes building a full computer using the CPU and adds keyboard input and video output. It even lets you program the HACK computer.That said, the game was still fun, but for I was able to zoom through it in 5.2 hours. Therefore I'm a bit confused about the target group: If you don't know about hardware design, you might be better off taking the course in order to properly learn the fundamentals. If you do know VHDL or Verilog, the game may be quite simple.All in all, it was fun enough, but not up to the level of TIS-100 or Shenzhen I/O."
,Not Recommended,576030,31535737,Posted: 3 May,all,FCC,"I struggled with giving the thumbs down here, as I love the idea and would hate to discourage the dev, but I would honestly not recommend MHRD to friends. It's not so much that the game is bad, but more that it's an inferior paid competitor to a free course.  I'm satisfied with what I got from the game and don't regret my purchase and time investment, but unfortunately I'd have to recommend going through the first 6 chapters of the NAND to Tetris course instead. (But boy will I feel guilty if my single review downgrades the overall aggregate rating.)http://nand2tetris.org/course.phpMy primary concern is that when you complete this game, you will not have the tools available for the theoretical next step of working in assembly code. If you had invested the same time in the NAND to Tetris course, you can continue to work up the layers of abstraction, with the promise of being able to build a compiler and then a game.  But with MHRD, your output will be locked into its specific system, with no way to expand on your work without hand-porting your designs to another system.I support many of the points in the top-rated positive reviews, so I'd like to confirm that the simulation is indeed complete and fairly non-buggy. I mention that, because I will not retread the good points, and hope you will take a look at the positive reviews for balance. Also, compared to the free course I mentioned, this game is a more complete integrated package, compared to the rough-edged hodgepodge of tools packaged as a zip.  But with that streamlining, this game doesn't have the robustness and versatility of the free tools of its academic competitor.Plot-wise the game doesn't have the witty humor of Zachtronics games. The flavor text starts with promise, but remains uncomplicated from beginning to end. Beyond the mention of Ted, there's no interesting surprises here. (Spoiler! You build a CPU! Your boss sends you a happy congratulatory Email! And the game does not suddenly turn into an open-world adventure where you traipse around rising Asia with Ted to close an outsourcing contract!)Another feature missing from Zach-likes is that while there are multiple ways to solve the chip designs, there's no easy way to compare your NAND counts with your friends. Not a big deal, but it's something you don't realize you miss until you boot up another Zachtronics game.While the controls attempt to kindle the nostalgia for the past, I found them a hinderance for inputting the solutions. While most of the game is intended to be played with pen and paper, I found that this insistence of archaic keyboard-only controls made the text editing experience distinctly unhelpful.  With my computer setup, I was also unable to copy solutions from the clipboard.  None of these anachronistic helpers would be necessarily implied by the setting, but I really wished the dev would not be a fundamentalist about omitting them.  At least support Vim/Emacs bindings, sheesh.This clumsiness with the user experience extends to the documentation, printed as it is in the needlessly archaic interface. Descriptions are not as in depth as free chapters from Elements of Computing Systems, sometimes even lacking fundamental context. I appreciate that others may have liked the immersion of the interface, but still question the design, given that free textbook chapters offer superior readability and content in pdf/paper form.While I was able to complete the game, if I was to start again, I'd unfortunately have to recommend using the simulator provided by the NAND to Tetris course instead, and reading the free chapters from the companion website.  I'm happy to have supported another game in this genre, but as it is, MHRD doesn't add anything more to what is available over the free offering of NAND construction simulators."
76561197985129425,Not Recommended,576030,32975818,Posted: 28 June,all,0x003b,"I wanted to like this game, but it plays like a bad homework assignment from an intro to digital logic course.  Regardless of your background, save your money and pick up Shenzhen I/O and/or TIS-100.  Those games are vastly more fun, educational, and challenging.If you are familiar with logic design, this game is trivially easy, often tedious, and fairly short.  I fully completed with in 3.5 hours, and unlike other games in the genre (like those above or Human Resource Machine), there is very little incentive to spend any time optimizing or improving your design.  A large portion of this game is taking a part you have already build, say an 1-bit adder, and extending it to 4-bits.  You do this for nearly ever part in the game.  Also nearly element you design is incredibly simple and mostly standard parts (all but the last couple are standard building blocks and require just a couple of components assuming you know the hierarchy), and you end up with a rather boring game that presents virtually no challenge to anyone who has a background in the area.Now you might say it is not for those people, and it is intended for people without such a background.  That may be the case, but I think those people are going to have a terrible time learning anything from this game.  Basic design concepts are completely missing.  There is not much of a discussion on Boolean logic in a general sense, de Morgan's Theorem is never discussed, nor is 2's compliment, and sequential logic is nearly completely abstracted away.  On the note of sequential logic, there is no discussion of latches or how flip flops are made even though you have the parts; you are simply given a flip-flop black box when it is needed. Add that to the fact that you really are not given much of a sense of how good your design is, and it is easy to see how this game fails to teach much of anything.In conclusion, the game is short and boring to anyone know has a basic grasp of digital logic design, and it is like going to be frustrating and mostly un-educational experience for anyone who does not.  The stuff Zachtronics puts out is substantially better for both groups of people."
,Not Recommended,576030,30250469,Posted: 28 February,all,r4m0n,"Pretty good start, if a bit boring. Implement the basic logic gates from NANDs, then use those to implement slightly more advanced stuff, all using a simple HDL.But then comes the time to start implementing Flip-Flops and other clock dependent circuits and... there is no clock signal.Sorry, I understand that cyclic circuits are complicated to simulate, but in real HDLs signal propagation is very important and you can't just take the cycles out and add a magic signal delay component this late in the game.As you threw realism in the circuit design out of the window, I'll have to judge the game on what's left, and what's left is an anachronistic DOS editor with smart autocompletion in it, and very boring tasks.In this kind of game, you need either to stick to realism completely, and let people play in it like a sandbox, or add heavy artificial constraints so people have to think hard on what they are doing (like most Zachtronics games). Just making people type in boring half-adder designs won't do you any good."
,Recommended,576030,29055576,Posted: 6 January,all,=Eh?= Norguard,"This is by no means a game, beyond the sparse emails which suggest that your unseen lackey will construct labour-intensive, but otherwise mindless wider versions of components you have already invented.Fair warning: this ""game"" is about inventing CPU components in a rather accurate fashion, and has very little in the way of hand-holding.If you want to fast-forward through a starter class on logic gates, memory and processors, without worrying about electrical engineering or clunky software (okay, the game is designed to be clunky, specifically), and you want to do all of that with no hand-holding or hints, then this is a fantastic way to spend a little money and a little time.My one wish, I suppose, is that the authors would rank your gates compared to other possible solutions, and grade you based on different criteria. My first play through, my solutions required at most just staring blankly for 10 minutes before typing in a naive solution, which might not work for gaming systems or mobile hardware, but certainly helps keep things simple. It'd be nice to see the system pop up and say: ""We think that you could get ~50% better performance out of this gate, if you refactored it"".If this souds abysmally dry to you, don't worry. It's exactly the type of game some people are looking for, right now. And I'm glad I didn't have to look far."
,Recommended,576030,29044384,Posted: 5 January,all,stephen dedalus,"This is a very well written programming game centered around building logic gates. It all starts with NAND and the rest is up to you, guided by a progressive 'task' system (new tasks appear as you solve the given ones). The completed gates can be used to build more complex ones, and a helpful intern 'Ted' automatically solves gates that are very similar to some you have done yourself, a nice timesaver since some tasks could be a little tedious.Unlike most logic gate simulators this one is focused on the programming side, and the visual representation of your diagrams is left up to you (ah, old pen and paper!). The language is simple to learn and very clearly presented in the in-game manual, with examples and all (essentially, a 'program' consists of the inputs/outputs section, the 'parts' section where you list the gates you need, and the 'wires' section where all the connections are specified. There is support for busses, too, with intuitive notation such as input[8] for an 8-bit input bus. Also, editor functions such as ctrl-c and ctrl-v (for cut and paste) can speed up things considerably.This being said, this game could be a little tough if you have no programming experience or if you have never seen a logic gate in your life. Perhaps if that were the case a preliminary quick trip to WIkipedia could be helpful (look up 'logic gate' and check out the basic AND, OR, etc.). Of course trying costs nothing thanks to Steam's refund policy, so why not go for it if you are curious?"
76561198296184792,Recommended,576030,31614213,Posted: 7 May,all,pawkw,"Some people have made comparisons of this game to the Nand2tetris course. Let's take a look:Nand2tetris comparison:Teaches you the basics of digital logic by building a ""CPU"".Fake Hardware Description Language.No graphical interface for component design.Fake DFFs that are not real world accurate.Horrible debug tools.At no point will you be able to implement in the real world.Have to purchase in order to get feed back.That's what they have in common. Let's take a look at some differences.Differences:$65 for coursera vs. ~$10 for MHRD.Nand2tetris has open sand box design tools which are free($0) and free(GPL).You can purchase the book for Nand2tetris for the second half of the course.MHRD has a leaderboard that lets you compare your solutions(nand count) to others.When you finish MHRD you are given the standard ""To be continued..."" message. I'm assuming that the next game will be moving into software, like assembler or such. I'm also assuming that we will be in ~$10 price range again. When you finish the Nand2tetris course you are given the same thing. You can purchase the Nand2tetris ebook for ~$24 to read material that will be covered in the second course. In both cases you will not be getting the second part now. In both cases you will learn a great deal about how computers work.Basically, MHRD is a lot cheaper and is a game rather than an academic offering. I think that some people will scoff at a game, and some will not have the patience to deal with professors. Games are for children and professors drag a one week subject into seven weeks. It really depends on you. But you are reading this on Steam... just saying.If you like logic puzzles, you will love this game. It is literally working with logic - digital gate logic. Some of the ""puzzles"" are quite hard, but definitely solvable. Personally I loved it."
76561198032193049,Recommended,576030,31523304,Posted: 3 May,all,Aeschylus,Fun game.  Wish it had vim keybindings.
,Recommended,576030,29790359,Posted: 8 February,all,<CODE BLUE>,"This game is amazing. If you have even a slight interested in electronics, logic or programming then I recommend you pick this up!As a programmer myself I really enjoyed the game, it was well laid out and the tasks can become incredibly challenging while remaining fun. The feeling of satisfaction when completely a task is awesome.The game teaches some important fundamentals on how logic gates work and how computers work on the simplest idea (on or off) to compute incredibly complex things."
76561198001299106,Not Recommended,576030,30232493,Posted: 27 February,all,jweather,"Way too short for the price.  The decoder is pretty under-specified (what should the op1/op2/opCode outputs be when instr[16] is set?)  Maybe that was part of the puzzle to reverse-engineer the missing specs.  Had my hopes up for another Zachlike, but this isn't it."
,Recommended,576030,29610786,Posted: 31 January,all,Oak,"Hard to call this 'a game', it's more of a manual/tutorial on a simple CPU architecture, building it all the way from NANDs.If this suits you, you will enjoy the game. A bit short, but very educational."
,Recommended,576030,29043431,Posted: 5 January,all,Ghouli,"Highly recommended for everyone interested in digital electronics. You start with the most basic logic gate of them all, and build your way up towards more complex designs. Awesome."
,Recommended,576030,29391036,Posted: 20 January,all,Spencer_white,"The game is overall good, with some minor, and major flaws.I liked how it taught the concepts, but it was primarilly useless. If you didn't understand what the varioud gates are, then you'd probably either get a refund or search a video. The Idea of TED was a nice one...Most games I see force you to wire the same thing over and over, which can get quite annoying, but this game pretty much unlocks things when you get the general understanding...MOST of the time.The game's simplistic nature is very nice. With most games using electronic music, this game simply has the background buzz and whir of a computer from this era, adding a very nice tone and environment.The puzzles were oddly captivating. Ever since I found this game on a youtube channel (Nathan's Sandbox), I was highly intrigued, but did not think the puzzles would be this much fun.The documentation was, sadly, a bit lacking. Simple things that the game's demographic would understand, like logic gates, semmed to have been gone over in a bit too much detail, while things like buses were a bit too confusing, but, admittedly, it did get less confusing after enough time.I know this entire review so far has been minor, petty complaints, but overall, the game dev really has done a great job at emulating something like an FPGA, but I do have one large annoyance.The game has great potential to actually go over things like memory, because, understanding is much better than just making. The game, as soon as you finish MUX4B and DEMUX4B, throws at you the infamous DPP; D Flip Flop. While a familiar name to most people of this game's demographic, if the game really does want to go through a teaching aspect, WHY would you just give the player a D flip flop? It could be a chance to learn about SR latches, T flip flops, etc., And the game just gives it to you, saying TED somehow built it, despite the game basically saying he's too much of a novice to actually help.Again, petty complaint on my part, but, it did kinda weird me out how they game dev, up until this point in the game, has remained fairly consistent with what TED was allowed to give you, then just gives you a whole new part. Overall, the game has been alot of fun so far, and I do recommend it."
,Recommended,576030,34570349,Posted: 28 August,all,Dravvad,"If you do NOT have much background in computation or digital design, I can see some aspects of MHRD being decent, though it is not good enough to teach you ""everything."" It definitely misses (or intentionally avoids) some information about the circuits themselves and clocks/sequential logic.If you DO have good background in the area, then there's a 50/50 chance that you will not like the game.Note that I would not say the game is worth the $10 at all, because indeed you can learn more by simply reading online and testing out in a few other places. Still, the idea and implementation is not bad.Despite myself having a big background in hardware design, it's been a handful of years since I've dealt with some of these things, and I was interested in refreshing myself and seeing how MHRD turned out. The syntax of the game actually bothered me a little bit, but that was a personal preference issue, I'd say.I think the game definitely starts out in a sensible matter, showing you a functionally complete gate, the NAND. Then the game slowly builds itself up to some more complex parts for a little while, most of which I easily blew through. As I have a background in this area, I cannot properly judge most of the pacing for people learning it new.However, what I can identify is that the game does scale too quickly once it throws the Decoder and CPU at you. I feel like someone trying to learn information this way would suddenly freak out, even if they made it all the way to this point. I am not sure how the developers would have gotten around it other than maybe breaking those pieces up even more into separate tasks.With that being said, I still feel like some people would find it fun to learn in this format, and it seems like a decent amount of people who have reviewed the game confirm that."
76561198006684815,Recommended,576030,30028226,Posted: 18 February,all,Chaos,"After spending some time messing around and getting used to the commands, I was able to complete all tasks and I have to say, the journey was quite fun. I had to invest in a dry erase board to plan it all out, as it does get a bit tricky as you progress.For those interested in playing, I'm a programmer so for me, it wasn't overly difficult. The game is more about logical thinking than it is with actual code. The syntax is very simple and easy to pick up, and even working with buses isn't overly complicated - quite flexible actually.Another big point is this is actual real world knowledge! If you can grasp these concepts, understand bits, and complete the tasks you've grasped topics that are taught at college level in computer engineering. The components are real, and actually used in the construction of your processor in your own computer (though at a much more complicated scale). Real stuff here people! There are college courses and simulators that teach these same things, and not even as well as this does, and cost a whole lot more.I would recommend the game to players of all skill levels, and I would say this to anyone who seems apprehensive about jumping into this text based game - give it a chance, take it one task at a time and you will be completely surprised at how it all comes together in the end.I can't wait for more to be added to the game because for me, it was over too fast. But for $10 it was definitely worth it!"
76561198135828860,Recommended,576030,29133755,Posted: 8 January,all,TiGa,"If you liked SpaceChem, InfiniFactory, TIS-100 and Shenzhen I/O, then MHR&D is a game for you. BUY IT NOW!You start with a single NAND chip and from there, go on to design other logic gates (NOT, AND, OR) before moving on to more advanced chips like ALUs and memory registers, culminating in the design of your very own CPU as a final challenge.Knowledge of boolean logic is all that you need when walking in and maybe some good visualization skills to think up schematics in your head or on paper. I'm a software reverse-engineer but I have never studied hardware engineering before and still completed the game while managing to learn a few things at the same time.The game can be off-puting at first due to the minimal amount of information given in the tutorial and the documentation but after thinkering with everything for a bit, all the pieces fall into place. The documentation is actually over-specific in some areas, causing information overload at first glance. i.e.: The documentation defines what is a ""letter"" and a ""digit"".The major feature severely lacking is a debugger to help on big projects. It would be nice to be able to put a probe somewhere that would give a debug reading at that location.It would also have been nice to have the option to turn off Ted the intern, who completes some of your projects instantly behind the scene. The possibility of making custom chips that are not an assigned task would have been a nice touch too.Short game, can be finished completely in a few hours, 2nd playthrough to get the new achievements took me ~2 hours. It would have been nice to do more completed tasks than the final CPU.Overall, great game for people who already know software engineering but might have never exposed to hardware engineering before."
,Recommended,576030,29121617,Posted: 8 January,all,tortov,"If you liked TIS-100 or Shenzen I/O you'll like MHRD too. I always was scared of logic gates, and it looked like black magic to me, but the progression of the game makes some sense of it."
76561198065049152,Recommended,576030,29346836,Posted: 18 January,all,Moneo,"This is a good game!11 hours in and I'm having a great time.It's incredible how it takes you on a journey from the humble NAND logic gate and you bootstrap your way up all the way to building a CPU.You start with a NAND gate and it teaches you to create a NOT gate, then AND, OR, XOR. You use these building blocks, made out of building blocks you previously wrote yourself, to create ever-more complex components; MUX (basically an if statement in hardware), registers (basic memory), RAM, all the way up to a CPU.It's surprisingly accurate to real life too, so I learned a ton playing this game. You spend a lot of time just writing in a notebook, but the combination of just the right structure of the problems, and not holding your hand too much, is really very rewarding and addictive.If you studied computer science, or are interested in programming or hardware, and always wondered how to break down what's happening under the hood to the most basic possible level, this game is for you.Highly recommended."
,Recommended,576030,29149835,Posted: 9 January,all,threedotonefour,"Nice little game where you are guided through the process of creating a full CPU. Great if you like games like TIS-100 and Shenzhen I/O. Be warned though - depending on your experience, this game might either be really short or really long."
,Recommended,576030,31144246,Posted: 14 April,all,Mijikl,"The final thing you make is rather hand holding, but after all of the schematics you've made up to the final thing to be made, there is joy in knowing that every single thing that was made up until the last thing has been put to use in some fashion. The occasional simulated lag was a bit annoying, and I couldn't quite figure out what made that subtle annoyance happen, but for me didn't happen too many times in a row to be too much of a monkeywrench in my thought process lol. If you are the kind of person who wants full achievement progress in all of their games, just looking up the answers online should be enough to obtain all of the achievements if you can't think of all the answers yourself, since the whole game really is just designing hardware components. No sudden twists where the game suddenly becomes an FPS at Bill Gates's house or anything like that, if you thought that all programmer-like games had something to do with Bill Gates for some reason. Anyways, a fun game that I enjoyed solving all the problems by myself for, and having the answers around might actually help me with a class in school later on in life if I copy the schematic diagram from the code into my notes, although probably not all of the material covered in a digital electronics course at college is covered in this game, although I'm just guessing on that last part."
76561198206822267,Recommended,576030,33990841,Posted: 3 August,all,Jarkov11,"A very fun game. It's pretty much as the description says - you build various logic circuits up to a CPU. If you're almost entirely new to binary logic, like me, I think it's both an interesting and rewarding way to get acquainted."
76561198128135790,Recommended,576030,33389735,Posted: 8 July,all,karlorbell,"Quite awhile ago, a little over 18 years to be more precise, I took a hardware design course as part of my degree.  We had to learn how to use NAND gates to build a computer, or at least a functional ALU...  Cut forward to the present day and I find someone has turned a vaguely identical course in to a programming-like computer game!  So I jmped at it.It is essentially a cutback hardware description language where you start with a single NAND gate and have to specify every other component in a 16-bit RISC CPU component by component from the NAND gate up.  Each new gate or component is presented as a ""Task"" to be completed and the game is simply developing each component in turn.  You get given descriptions of the purpose and specification for each part, complete with truth tables and ASCII art wiring diagrams.  The ""answer"" is written in a fake, simple, but actually entirely pleasant pin wiring language, not wholly unlike commercial products.  There is no pain of trying to lay out circuitry on a PCB (as in Shenzhen I/O), it's purely describing how the pins need to connect.This could end up being a little repetitive, as pin wiring for 16bit muxers could require quite a lot of typing, but it has bus syntax for multi-pin inputs and outputs, and the game makes you develop 4bit version of things to prove you know the theory and has an assistant, Ted, do the grunt work and write the 16B versions for you.  Thus removing a lot of the tedium without sacrificing any of the learning or sense of achievement.The specifications are sound, I only got a little lost on flip-flops, where I understood the concept in the real world but the presentation in the game was a little lacking.The aesthetics are, to me, quite fun.  The system is implemented as a 1980's style text-terminal.  I switched the monitor setting to pure-green for full authenticity.  It's entirely keyboard controlled, menus and displays are all ASCII art generated, reminded me of coding for text terminals back in the 80s/90s.  The code editor is fixed width and fixed length, but functions much the same as a modern editor.  The game constantly makes an old-school machine whirring sound, and heavy cursor movement clicks, which could possibly be highly irritating to some, but I left it on, there is a setting if you dislike it.So all in all, highly educational and a great refresher for my memory.  That said, I completed the game in 5.7 hours play, so don't expect a long experience - but as I said, the concepts were familiar to me.(NB. I've been playing programming games all week,Human Resource Machine,Shenzhen I/Oand this.  They all are great, in different ways.  This one is the most basic, being entirely about logic gates and fully text based, but it is nice to see the lower level in clear relief, after working on the microcontroller level / assembler for a long time beforehand.)"
,Recommended,576030,30600368,Posted: 18 March,all,galalleni,"Pros:+ Learn how to build a CPU from the humble NAND up+ Somewhat challenging puzzles (depending on your education)+ Learn fundamentals of programming in a HDLCons:- Short- No sandbox- No triggers or events (D-Flip Flop is only clocked primitive)Note: If sandbox was available, clock signal could be extracted from DFFDecided to play this in between work sessions for a bit of relaxation.  Note: I don't use paper or whiteboards like the game recommends, most of the components are easy enough to think through.  You just have to remember, the multiplexer is your friend.  If you get stuck, look up the free course ""From NAND to Tetris"" (Nisan, Schocken).There seem to be a lot of comparisons of this to the Zachtronics games, however, I think this fits a slightly different niche: This is closer to practical hardware design.  I also play the Zachtronics games and enjoy them thoroughly, but the designs there are largely fictional.  I could trivially port the designs in this game to actual hardware.If you work with HDL all day or are in a uni course on programmable logic it might be a bit boring.  Most of this is taught in the first week of an HDL course, along with some more engaging examples.  It's been a while since I went to uni and did hardware design; so this was an interesting refresher.I would also like to add that I hope to see more from this developer on MHRD, or another game on steam in the future.TL;DROverall I would recommend this game if you are interested in hardware design, especially on discount.8/10"
,Recommended,576030,32059514,Posted: 30 May,all,JerwuQu,I enjoyed it.Felt a little barebones though.Actual clocks and running circuits (in realtime) could make it more enjoyable; especially if it had some visuals.
,Recommended,576030,29128298,Posted: 8 January,all,S'mores,"After playing TIS-100, I jumped into the Steam Store and searched for games with the Programming tag, and alas, it is not a well-populated corner of the market.  However, this game had come out a few days ago, and for only 10 bucks at the time, it seemed well worth whatever I would probably get out of it.  As a novice programmer, I am always eager to get my grubby paws on experiential games.Having finished the game (as far as I can tell, until DLC or later updates), it was a great way to get a rudimentary understanding of how basic computational chips work. It was extremely satisfying to take a single logic gate and a simple delay device and end up building all requisite components for a CPU and for RAM, the end goal of this game.It was, in fact, very similar to Zachtronics' games TIS-100 and Shenzhen I/O, but with differences (for better or for worse...) throughout.  For example, though Zachtronics better implemented the task and email system than MHRD did with Shenzhen I/O, MHRD keeps you interested with use of an ""intern"", Ted, who will do the tedious simple expansionary work for you.All in all, it's a minimalist, short-but-sweet game that is difficult, but rewarding for those with an aptitude for puzzle games."
76561197978638448,Recommended,576030,30112898,Posted: 22 February,all,Soup,"Great game, but a bit short if you've worked with digital logic before."
76561198022751934,Recommended,576030,34693063,Posted: 2 September,all,Manabender,"It's games like this that make me wish there was a middle rating between ""recommend"" and ""not recommend"".On one hand, it is exactly what it says on the tin. It asks you to (ultimately) build a rudimentary CPU out of parts made from other parts made from NAND gates, and it expects you to build all those parts with a text editor.On the other hand, it's nothing more than what it says on the tin. I've learned enough about down-to-the-metal hardware to know how to make every part the game requested. The 4.6 hours I logged were mostly spent either drawing out the solution, or typing it up.It's hard to recommend this game to anyone without any knowledge of computer logic or hardware because they'll be lost very early. It's also hard to recommend this gamewithsuch knowledge because it's so basic. But I still respect it nonetheless, and it could be something really great if it had either A) More teaching to it, or B) More puzzles, depending on whether you want the target audience to be people that want to learn computer hardware, or already know computer hardware."
,Recommended,576030,29491575,Posted: 25 January,all,flyboat,"Enjoying this game so far. Has helped demystify how one might get from a humble NAND gate to a fully functional CPU.I recommend this game to anyone who enjoys puzzle games and wants to also gain a basic understanding of how computers are constructed at a very low level. I'm a software developer myself and am enjoying solving problems from a new, low-level perspective. I'll probably end up seeking out more information on hardware design and electronics because of this game."
,Recommended,576030,30064794,Posted: 20 February,all,ShareCan,"As a developpement engineer, my coworkers took big loans to pay their 5 years studies, and I just get a high-level developpment degree after university and a 2 monthes Boole algebra curse.They learned how to implement a CPU during 3 years before working at a high-level dev, at 5000$/year.I've learned it all after beginning work, for 10$.1024/10, would transform IF in AND again ;)"
,Recommended,576030,29572092,Posted: 29 January,all,m1kc,"If you ever wanted to build your own CPU, that's clear 10/10, buy it immediately and you won't regret. If you never had such an idea, go buy The Witcher or whatever, these nerds again are having fun in their weird ways, thank God we normal people don't do this stuff."
76561198043600672,Recommended,576030,29494218,Posted: 25 January,all,GandhiGandhi,I'm studying Computer Engineering at University right now. Took me 90 minutes to realize that this game was basically the same thing as my homework for 'Logic Design'... which is dope.I'm a fan.
76561198065352711,Recommended,576030,30302644,Posted: 3 March,all,Kabitu,"Short experience (finished it in an afternoon), but very educational and fun. I thought the gap from logic gates to a cpu capable of interpreting machine code was far greater. It's very clear that what you're building in here is truly a similar structure to real cpus, just smaller and less capable.The inclusion of Ted was an awesome and fun design choice, great way of solving the boredom problem."
,Recommended,576030,29132166,Posted: 8 January,all,Yan,Nice game about creating your own CPU from scratch (NANDs and simple flip-flops). The best part of it is creating something and then later using it like a 'black-box'.
76561198018732378,Recommended,576030,30236267,Posted: 28 February,all,BoondockSaint,"Coming from someone thats only just entering the world of hardware design as  a self taught enthusiast, this 'game' is nothin short of exceptional as far as understanding and building upon the foundations of circuit design. Theres plenty of scope to expand beyond whats offered and i certainly hope the developers consider this, but for now, as far as foundation level skills go, this is bloody brilliant"
76561198324260188,Recommended,576030,30287149,Posted: 2 March,all,clarkdbassett,"Pros:delicious logicnice progressiona refreshing change from normal programming tasksCons:kind of shortclunky editor (chops off characters at line end and screen end)really would have been more enjoyable with a graphical designer or at least representationsome descriptions are confusing (e.g. negation)some way to specify additional debug outputs at specific points would have been helpfulreally would have liked to be able to create my own designs for re-use in assigned tasksIn short:good game, don't regret buying it, I just wish there was more."
76561198077223121,Recommended,576030,33929797,Posted: 31 July,all,eS | MacTeiXas,"As a 19 year old student with passion for hardware design, it is really amazing to find such a game ( / simulator ) after too much time searching for one, great job with the game creation / idea and please give us more levels"
,Recommended,576030,29221835,Posted: 13 January,all,edward,"This game will give you an insight into how a CPU can be built up from the most basic of components, but it is not very much like a game. While I enjoyed it, in its current state it feels incomplete and has little replay value.As other reviewers have said, there needs to be a mechanism for rating your solution to a problem against other solutions, such as through gate count or power consumption, and I think there needs to be something beyond making a CPU, maybe a graphics co-processor or something, or even a sandbox-type mode where you can create and test your own circuit designs. There could also be a way to have multiple designs for the same component."
,Recommended,576030,29518191,Posted: 27 January,all,AOS,"A bit short, but fun"
,Recommended,576030,29475250,Posted: 24 January,all,jsdratm,"This is a great game that takes me back to the days when I did similar work in VHDL for my computer engineering degree.  In my computer architecture class, we built our way up to a multi-cycle CPU using Altera and it was a great way to learn how CPUs are built.  This game lets you do the same thing in a nice structured fashion and a simple, no pressure environment.  If you enjoy this kind of thing, consider a career in computer or electrical engineering!"
76561197998449828,Recommended,576030,32241888,Posted: 7 June,all,rmc,"MHRD is a fun little puzzle game about building digital logic hardware from two of the most basic components: NAND gates and Flip-flops. Using these basic parts you build more and more complex higher-level components, until in the last challenge you design a simple CPU.The game doesn't run very well on my Mac: the game randomly freezes for a couple of seconds now and then, and it crashed once (losing me a few minutes work on the decoder). Not huge problems, but definitely annoying. I don't know if these issues are Mac-specific.Other than that, the game is set up pretty well. There are clear in-game instructions, and you're carefully walked through the first few steps before the training wheels come off. The interface is an 80s/90s MS-DOS style text-only interface with a simple text editor where you type in your designs. The editor has some mildly annoying quirks but is overall functional. Each full design must fit into a single screen of text: there is no scrolling. One screenful is plenty, but you do have to limit your empty lines and comments.A design is made by grabbing a few existing parts, putting them together, and describing how the components must be wired to each other and to the design's inputs and outputs. Not traditional programming as you may know it, but basically just a textual definition of how to wire up components. You get a clear description of what the expected behaviour of your design is, so you're never flying blind. After making a design, you run a bunch of predefined automated tests to verify your design is correct. It gives you all the details of successful and failed tests, including expected and actual output, but there are no debugging facilities.The game is pretty short. You step through the abstraction levels very quickly, and the final challenge arrives before you know it. I finished it in a bit under 3 hours, and I took it slow. For the price tag, I won't blame you if you think this game is too expensive. Having said that, I am an experienced software developer. Without a programming background the game will probably be significantly longer and more challenging.There is a little framing story, but it's very thin. This is not a story-driven game.One nice feature is ""Ted"", a coworker you run across early on who will take a lot of tedious copy/paste work out of your hands. For example, for the CPU you will need a 16 bit adder. You first design a 1 bit adder from scratch, and then you design a 4 bit adder to prove you can combine multiple adders to form one bigger adder. After that, Ted comes along and spares you the tedium of building the 16 bit adder. He creates it for you and it's instantly available for you to use.There is very little replayability. Other programming games usually have a bunch of optimization challenges to bite into after the main campaign, but not here. The test runner tells you how many NAND gates are in your design, but doesn't give you a challenge or reward.Does this game teach you how to design logic circuits and real CPUs? No. And it's not meant to, I'm sure. It does teach you a bunch of fundamental principles, but don't expect to jump from this game straight into real hardware design. It's a fun introduction to the subject matter, but nothing more.Pros:- Fun puzzles- ""Ted"" prevents tedium- Combine results from earlier puzzles in later ones- Uses real-world principles of logic circuit design, but requires no previous experienceCons:- A bit unstable on Mac- Short- Easy for experienced programmers/hardware designersOverall, recommended if you don't mind a short game at this price point."
76561197970078168,Recommended,576030,32196520,Posted: 5 June,all,hermetico,"Just for electronics engineers or alike.Interesting to see how logical doors and rest of logical electronics elements can be built from the smallest pieces.If you don't know nothing about truth tables, OR, XOR, NOR, AND, NAND, etc., just stay away, this is not your game.The interface is poor, comparing against spacechem interface, by example."
,Recommended,576030,29126122,Posted: 8 January,all,PiedotTaste,"fun game, love the idea of it. it's relatively straight-forward if you have a background in digital electronics, otherwise though it doesn't hold your hand much :)"
,Recommended,576030,29493538,Posted: 25 January,all,duckyvirus,"If you're into electronics , FPGA or things of the sort it's quite fun.  Easier than I originally expected but I'm enjoying it"
76561198042810103,Recommended,576030,29284476,Posted: 15 January,all,Foxroy,"A well put together and enlightening game, I really enjoy it!"
,Not Recommended,576030,35387295,Posted: 1 October,all,Alex,"Finished it and can't really recommend this to anyone.- For the very begginers, it does not explain most of the stuff underneath, making it too complex.- For more or less seasoned engineers it's too short/easy/linear and is totally no fun.- Yes, optimization can be fun to get job done with less gates, but the 'game' does not even ask you to optimize.- SFF is not really SFF, just a mere substitute that may be misleading.Overall: no fun, no challenge.*Maybe* can be interesting for total noobs, but because of lack of detailed explanations would be too hard for almost any non-technical person."
76561198198828549,Recommended,576030,31810247,Posted: 17 May,all,Ethan,"Spanish:Este juego es simplemente genial.La interfaz es muy muy sencilla (simula un sistema MS-DOS al fin y al cabo) y eso hace que no haya que tener fluidez con ningún tipo de controles (aunque saber escribir rápido ayuda, claro).La progresión de dificultad está muy bien hecha y permite al jugador entender poco a poco la estructura base de un ordenador. Me gustaría que se muestre el diseño funcional de los componentes que Ted completa por ti, pero tampoco es algo que sea necesario.He de decir que algo que sí he echado en falta y que me gustaría que implementaran es un método para crear tus propios componentes y hacer los tests que tú quieras con ellos, puesto que ahora que he terminado la CPU y se ha terminado el juego (de momento, espero que añadan algo más) no tengo nada con lo que seguir enredando. Insisto, esto es algo que verdaderamente hace falta en el juego.Le daría 4/5 estrellas solo porque falta eso. Por lo demás el juego es impecable, simple y complejo a la vez.Recomiendo totalmente este juego a aquellos que tengan interés por el tema. Vale muchísimo la pena.English:This game is just great.The interface is very very simple and you don't have to have fluency with any controls.The difficulty increase is appropiate and allows the player to understand little by little the computer's base structure. I wish the functional designs of components that Ted does for you were shown, but it isn't essential at all.Something that I've really missed and that I would like it to be implemented is a way to create you own components and do the tests you want with them, because now that I've finished the CPU and the game is over (for now) I don't have nothing to keep messing around with. This is something that is really needed in the game.I would give it 4/5 stars just because that is missing. In other respects the game is flawless, simple and complex at the same time.I recommend this game to everyone who has an interest in the subject. It's very very worth it."
76561197970688889,Recommended,576030,29516400,Posted: 26 January,all,lowerlowerhk,"Most players enjoy building from a simple NAND gate to a CPU, but I am not most player. As someone with physics background, I have to play my own puzzle on a daily basis, only that the building blocks are not NAND gates but sub atomic particles, up to the scale of a single piece of semiconductor. The excitement you get when you could explain, down to the level of standard model, how a computer works, is no small feet."
76561198325958746,Recommended,576030,31797109,Posted: 16 May,all,SlimeKillR,"This game is definitely worth the $6 I paid for it, and it would probably be worth the ten it is now, coming from an aspiring electrical engineer. It is incredible learning how a computer works, and if you get stuck you can watch Crashcourse's videos on YouTube about computer science."
,Recommended,576030,33297457,Posted: 5 July,all,thsouza2501,"""Nand 2 Tetris Part 1 - The Abridged Version""."
,Recommended,576030,29766041,Posted: 7 February,all,Jorge is rek,"After having played around with redstone in Minecraft I got quite the interest for digital circuits and the inner workings of computers. This game triggers that same spot of my brain as redstone did back in the day, and I love it.As others have said, the game can be really hard if you're not familiar with digital circuits, and a bit of programming experience will probably be of use too (just basics, such as arrays). The documentation is probably a bit lacking, so for people without experience I believe some research on the side will be of great help.For absolute beginners, I would actually recommend redstone in Minecraft as a good starting point. At least that worked well for me.I loved this game, but I wish the editor was a bit better. A good and easy enhancement would be to allow users to enter more text. As it is right now - at least as far as I'm aware - there is no possibility of scrolling in the window where you enter the hardware description. For some circuits you then have to enter several wire connections on each line, which makes getting a good overview very hard."
,Recommended,576030,29753137,Posted: 6 February,all,malycz,"It is not a game in a rigid way. It's a simulator of real engineering in VHDL / Verilog, but very funny."
,Recommended,576030,29753549,Posted: 6 February,all,rjm27trekkie,"This game was quite fun, if you're in to logic and hardware design buy it.However...Why is there no NOR gate in the logic section?Custom Part Designs?"
,Recommended,576030,29932939,Posted: 14 February,all,atulinea,"Have just made the MUX, thanks to my previous knowledge of Karnaugh maps.In the meantime, in the early 80's, I doubt many folks would have had 512KB of RAM. Being from that era, it was more typical to have 64K + 256K expansion.So much more I can say, as I have spent time with 6502, 6800, 6802, 8080, Z80, Z8000, 68000 CPU's from that era."
76561198033891479,Recommended,576030,30225921,Posted: 27 February,all,Oglethorpe,yo
76561198003311451,Recommended,576030,29931542,Posted: 14 February,all,Роскомнадзор,"Great game, as it comes to learning on self experiense.But it still laks of some advanced stuff...When you have non-readable specs, and only expected results.Which you have to change because they are illogical to the task.Which need to be optimize, to match time specs, because TED didnt done a good job.And jumpscares.... Yes a really scary game!"
76561198085728235,Recommended,576030,30310216,Posted: 4 March,all,The Wicked,Slozhna
,Recommended,576030,29717942,Posted: 5 February,all,Infinitynull,After playing this game any programmer would appreciate how easy it is to compare using logic statements. This game makes you build these gates to perform logic comparison from the start (NAND). Anyone that loves a challenge needs to buy this game. My notebook is full of zero and ones trying to figure out these gates.
,Recommended,576030,29886284,Posted: 12 February,all,Pile,Very cool
,Not Recommended,576030,34858826,Posted: 10 September,all,АШР ДНО 1337 ULTIMATE,"Kinda fun, but:- You can't run program on CPU. Does it work even? :(- Lags sometimes- No saving progress to steam cloud- The editor doesn't have code highlighting (it would be cool to highlight parts with different colors)- The editor doesn't allow to write more than 50 lines or so (hard to structure code sometimes)- It's annoying that you can't leave comma after the last wire"
,Recommended,576030,29812125,Posted: 9 February,all,teb,I'm lovin' it.
,Not Recommended,576030,30381855,Posted: 7 March,all,2go,Had a lot of issues with window mode. Wasn't able to refund it because it was runned in background on my Mac laptop.
,Not Recommended,576030,32751120,Posted: 24 June,all,Mr. DOS,"This game consists solely of, from what I've seen, a simulated console interface. With that in mind:1. How does a game like this weigh in at 110MB?2. How does a game like this suffer random stuttering/lag?"
,Not Recommended,576030,29051456,Posted: 5 January,all,JustChill,"I'm a programmer and I thought this game would be a lot of fun. However this game uses a semi complex syntax system and the documentation in-game and online are just terrible. I just barely got past the first level, and I used trial and error. The second level was damn near impossible to figure out going on their documentation.I'd highly recommend TIS-100 or Shenzhen IO if this game interests you. They have a lot more documentation and while both games get complex, they are still fun to play and figure out. Something this game lacks."
76561198190710127,Recommended,576030,30483486,Posted: 12 March,all,aubergine18,"Great game if you want to delve in to logic gates, arithmentic processing and ultimately build a small CPU!Not for the feint hearted!"
,Recommended,576030,29489603,Posted: 25 January,all,piyo da,it's like work but productive
76561198068798625,Recommended,576030,29424949,Posted: 22 January,all,Snowe,"Between Human Resource Machine, TIS-100, Shenzhen I/O, and now MHRD I have learnt to love low-level computing after failing the subject at uni last year and not loving it so much.  Next step is programming microcontrollers in assembly if this brain fever continues.If you get through this game, the free online nand2tetris course will be a breeze, or vice versa.  So glad these games exist, they are brain training for computational thinking made fun."
76561197998764583,Recommended,576030,29448628,Posted: 23 January,all,calculon102,"As master-graduate in computer-science, but specialized in software-engineering, this is an intriguing travel back to ""hardware programming"" and logic curcuits, which where touched at several occasions during different courses, but were never put into perspective of modern computing.This game however manages to travel from NAND-gate to a full blown CPU with ALU and Registers. What's maybe missing here is a slightly better visualization. Especially for graphical i/o-connections  and difference of actual and expected values.In its current ""hardcore""-mode it may be too nerdy, even for most C.S.-graduates. Which is sad, because education in computer science only rarely manages dismiss the actual magic of modern computers or bridges the gap between theory and reality. Actually, in a bit more sophisticated state, this game may be used as tool for education in some sort."
,Recommended,576030,29685334,Posted: 3 February,all,LaResistance Mike,Always a pleasure refreshing university's memories!
,Recommended,576030,30276933,Posted: 2 March,all,neizod,WAYS BETTER THAN MY TEXTBOOK!
,Recommended,576030,31748017,Posted: 14 May,all,evileye,"I realise this game will not be to everyone's taste, but this has been really fun so far. There's very little hand-holding, but running the tests is very fast, so it's possible to see quickly if something is wrong. If you enjoy logic/circuit design then this is for you. Only small disappointment was that the DFF was simulated. I do realise that this would make things a lot more complicated, however. You might want a copy of Mano standing by ;)"
76561197975522241,Recommended,576030,31783073,Posted: 16 May,all,Grumble,"I enjoyed this game, even though it's not very game-like.  It's a lot like a basic digital hardware design course, minus the boring stuff and clock details.  My only complaint is that there's no debugger, so when your design doesn't work you will use scratch paper and your brain to figure it out.  Try it - it's fun!"
76561197970469464,Recommended,576030,31521555,Posted: 3 May,all,[CH]Quorg,"This game reminds me a lot of the time when I was a kid with one of those electronic kits and learned the basics about it. Only this time it's about building a CPU from the bottom up - how cool is that!Although the game is strictly textual and thus very technical and ""dry"", it has a bit the charme of a round based game where I repeatedly told myself ""I'll just do that one next thing before I finish for today""."
76561197971296469,Recommended,576030,29535235,Posted: 27 January,all,Stickwick Stapler,"This game is forcing me to learn things, damn it!"
,Recommended,576030,31420885,Posted: 28 April,all,Viking at RAGE,"Small IntroWorth every penny. This game is ideal for anyone interested in the realm of electronics, computer science or even maths. Although the game is short it is sure one hell of a workout for your brain especially in the later stage of the game.ProsChallenging for your brainBased on how a real CPU worksEducationalImmersive in a way with the whole background audio and keyboard soundsTrading cards + achievementsConsBugs bugs bugs, the game sometimes gets stuck while you're typing which causes you to lose focus, moreover, the achievements are broken however there is aworkaroundTed, he creates magical circuits and doesn't fully optimise...Things to improveAdd functionality to be able to create your own circuits and therefore modularise the cpu furtherAdd an easter egg chipAdd better storage circuits such as SR Flip etc.Unforunately we will not see improvements#Discussions_QuoteBlock_Authorhttp://steamcommunity.com/profiles/76561198023667160] icy {developer}[/noparse][/url] To be clear: The game is sold ""as-is"" and no future content should be expected!"
76561197986869202,Recommended,576030,31612637,Posted: 7 May,all,this is fine,"Very cool learning game, you will discover how to create a computer from scratch.The game playfully bridged my own conceptual gap between logic gates and assembly.Disclaimer: clock signals are abstracted, making for a somewhat easier ride.Previous experience in logic might help (cf circuit coder on ios).TIS100 lovers should feel at home."
,Recommended,576030,31629332,Posted: 8 May,all,icoz.vt,"Very cool!Good for first try for myself in hardware.I was stunned, when realized that there is restrictions for code size (screen width and screen height)! Sure - this is bug.I wish there will be north bridge and video card levels,  or maybe some steps to Notch's DCPU-16.And in advance - VDHL or Verilog. And then put it to FPGA..."
