{"reviews": [{"recommendationid": "34405018", "steam_purchase": true, "votes_up": 10, "weighted_vote_score": "0.520926", "voted_up": true, "language": "english", "author": {"last_played": 1507171950, "steamid": "76561198023549486", "num_games_owned": 291, "num_reviews": 8, "playtime_forever": 13299, "playtime_last_two_weeks": 2913}, "votes_funny": 0, "review": "(Based off of a total usage (so far) of 183 hours.)\n\nBackground in other \"smiliar\" IDE's: Used Game Maker Studio for 4 years before I touched Clickteam Fusion.\n\nIt's really hard to say which is the better tool, since it really does depend on what kind of game you are building as well as what level of control you think you will need to build said game. Honestly, if you're building any kind of 2D platformer, top down jRPG, top-down \"Zelda\" style adventure game, etc. then Fusion is really all you would need. This is largely due to the sheer number of extremely useful/powerful extension widgets you can add to your project, that do more than adequate work on a number of \"heavy lifting\" aspects of your development. (You don't need to code things like physics, dynamic animation timing/draw engines, programming for DI/XI controller schemes, GUI's, etc. etc. from scratch, since there is an add-on widget for each of these tasks, and they are all very powerful/flexible.) It took me a grand total of 4 days to completely port the plaformer engine I'd built with GM:Studio over the course of some months, into Fusion, and a good bit of that time was just learning the quirks of the Fusion IDE.\n\nDuring the testing of objects and rooms, all events that you create are merely interpreted at runtime, not compiled, though you do get to compile your finished project into an .exe for distribution. The thing about interpretation during testing is that you now need to worry about how your event list for a given object is sequenced, since the list will be interpreted (read) TOP TO BOTTOM, during every frame. It's kind of annoying to have to experiment and arrange things so that they work for TESTING, when it probably won't matter how most stuff is sequenced after the compile. The thing this has over GM: Studio, is that you can now test things MUCH quicker, in piecemeal fashion, without having to compile your entire project every single time you want to test anything you did or changed. \n\nBecause of the \"spreadsheet\" structure of the IDE, you are no longer able to write code blocks in the traditional sense. This means no real \"if/else\" statements, no real \"swtiching\" statements, etc. There ARE ways to simulate such things within the workspace. One example is dynamically activating/deactivating groups of events as you need/don't need them to run. (Kind of like creating a switching statement, since you can't actually write out a switching statement.) Fusion DOES support the ability to have GLOBAL variables, strings and events, so you don't have to keep copypasting these things from room to room to room. (Example: Player control handling, object variables that need to affect the game world globally, etc.)\n\nImporting animations, tilesets, sound, music, etc. is handled much better in Fusion, IMO. You no longer need to code loops, forced frames and the like, since Fusion is intuitive enough where you can do it all by clicking this or that checkbox.\n\nNow...objects. (Creature objects for example and in particular.) In Fusion, when placing more than one of the same object in room, you are actually placing DUPLICATES of that object, not multiple INSTANCES of that object. That means they are identical in every single way, right down to their event timing. (I.E, 10 hopper enemies: one hops, they ALL hop at the same time, etc.) There is a \"ForEach\" widget blah blah (UPDATE: There is actually ForEach loop capability built into Clickteam Fusion now, and can be found in the actions menu of any object in your project. Just intialize and run them like you would any fastloop. Testing the potential of these things and what all they can do for you, really does stretch into more \"intermediate\" territory, but after some good experimentation and watching a few tutorials, it's actually pretty easy.)\n\nQuirks aside, I really do feel like Fusion might be the better option for absolute beginners, and if you're somewhat experienced already and willing to figure out the quirks, could mean MUCH faster prototyping/building for you. (Not gonna lie, the quirks and getting Fusion do some of the more outside-the-box stuff can be a bit frustrating at first, especially if you're reaching for something that's usually so simple to do with raw code. Once you figure it out though, the QoL perks are pretty massive.)", "timestamp_updated": 1506065335, "written_during_early_access": false, "comment_count": "1", "received_for_free": false, "timestamp_created": 1503359543, "votes_down": 0}, {"recommendationid": "33942292", "steam_purchase": true, "votes_up": 1, "weighted_vote_score": "0.000000", "voted_up": true, "language": "english", "author": {"last_played": 1499630454, "steamid": "76561198021665823", "num_games_owned": 193, "num_reviews": 9, "playtime_forever": 427, "playtime_last_two_weeks": 0}, "votes_funny": 0, "review": "It works even better than advertised. I was able to create a complete game from a tutorial on the same night of purchase. I did not need to read thick manuals or watch lengthy videos to get started. The software instructions and the tutorials are well written and help you with absolutely every step. The converters also work very smoothly. I had no difficulty in converting the tutorial games into HTML5 format and were ready to demonstrate to my friends. The company is very quick at responding to issues and questions. If you are searching everywhere for a good beginner to advanced game and application tool, this is the place to be.", "timestamp_updated": 1501564227, "written_during_early_access": false, "comment_count": 0, "received_for_free": false, "timestamp_created": 1501564227, "votes_down": 0}], "success": 1, "query_summary": {"total_positive": 178, "review_score_desc": "Very Positive", "review_score": 8, "num_reviews": 2, "total_negative": 19, "total_reviews": 197}}